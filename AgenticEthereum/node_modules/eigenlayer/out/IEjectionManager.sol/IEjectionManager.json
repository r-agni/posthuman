{"abi":[{"type":"function","name":"amountEjectableForQuorum","inputs":[{"name":"_quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"ejectOperators","inputs":[{"name":"_operatorIds","type":"bytes32[][]","internalType":"bytes32[][]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEjector","inputs":[{"name":"_ejector","type":"address","internalType":"address"},{"name":"_status","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setQuorumEjectionParams","inputs":[{"name":"_quorumNumber","type":"uint8","internalType":"uint8"},{"name":"_quorumEjectionParams","type":"tuple","internalType":"struct IEjectionManager.QuorumEjectionParams","components":[{"name":"rateLimitWindow","type":"uint32","internalType":"uint32"},{"name":"ejectableStakePercent","type":"uint16","internalType":"uint16"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"EjectorUpdated","inputs":[{"name":"ejector","type":"address","indexed":false,"internalType":"address"},{"name":"status","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"OperatorEjected","inputs":[{"name":"operatorId","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"QuorumEjection","inputs":[{"name":"ejectedOperators","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"ratelimitHit","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"QuorumEjectionParamsSet","inputs":[{"name":"quorumNumber","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"rateLimitWindow","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"ejectableStakePercent","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"amountEjectableForQuorum(uint8)":"b13f4504","ejectOperators(bytes32[][])":"0a0593d1","setEjector(address,bool)":"10ea4f8a","setQuorumEjectionParams(uint8,(uint32,uint16))":"77d17586"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ejector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"EjectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"OperatorEjected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"ejectedOperators\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"ratelimitHit\",\"type\":\"bool\"}],\"name\":\"QuorumEjection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"rateLimitWindow\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"ejectableStakePercent\",\"type\":\"uint16\"}],\"name\":\"QuorumEjectionParamsSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_quorumNumber\",\"type\":\"uint8\"}],\"name\":\"amountEjectableForQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[][]\",\"name\":\"_operatorIds\",\"type\":\"bytes32[][]\"}],\"name\":\"ejectOperators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ejector\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setEjector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_quorumNumber\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rateLimitWindow\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"ejectableStakePercent\",\"type\":\"uint16\"}],\"internalType\":\"struct IEjectionManager.QuorumEjectionParams\",\"name\":\"_quorumEjectionParams\",\"type\":\"tuple\"}],\"name\":\"setQuorumEjectionParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"amountEjectableForQuorum(uint8)\":{\"params\":{\"_quorumNumber\":\"The quorum number to view ejectable stake for\"}},\"ejectOperators(bytes32[][])\":{\"params\":{\"_operatorIds\":\"The ids of the operators to eject for each quorum\"}},\"setEjector(address,bool)\":{\"params\":{\"_ejector\":\"The address to permission\"}},\"setQuorumEjectionParams(uint8,(uint32,uint16))\":{\"params\":{\"_quorumEjectionParams\":\"The quorum ratelimit parameters to set for the given quorum\",\"_quorumNumber\":\"The quorum number to set the ratelimit parameters for\"}}},\"title\":\"Interface for a contract that ejects operators from an AVSs RegistryCoordinator\",\"version\":1},\"userdoc\":{\"events\":{\"EjectorUpdated(address,bool)\":{\"notice\":\"Emitted when the ejector address is set\"},\"OperatorEjected(bytes32,uint8)\":{\"notice\":\"Emitted when an operator is ejected\"},\"QuorumEjection(uint32,bool)\":{\"notice\":\"Emitted when operators are ejected for a quroum \"},\"QuorumEjectionParamsSet(uint8,uint32,uint16)\":{\"notice\":\"Emitted when the ratelimit parameters for a quorum are set\"}},\"kind\":\"user\",\"methods\":{\"amountEjectableForQuorum(uint8)\":{\"notice\":\"Returns the amount of stake that can be ejected for a quorum at the current block.timestamp\"},\"ejectOperators(bytes32[][])\":{\"notice\":\"Ejects operators from the AVSs registryCoordinator under a ratelimit\"},\"setEjector(address,bool)\":{\"notice\":\"Sets the address permissioned to eject operators under a ratelimit\"},\"setQuorumEjectionParams(uint8,(uint32,uint16))\":{\"notice\":\"Sets the ratelimit parameters for a quorum\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IEjectionManager.sol\":\"IEjectionManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":erc4626-tests/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\"]},\"sources\":{\"src/interfaces/IEjectionManager.sol\":{\"keccak256\":\"0xdcc43919e2ab733aa1ae0c190678ce0945969b43592dd26a6deb18c0c0b9dc14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41f2c8654ca7ea545a6932464627ae07e043df903be96d3f0504e00e16c09c2f\",\"dweb:/ipfs/QmdcAWZZxPVhRQeuMmByHae8qeovoiUHMk6Uywff91Ektc\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.12+commit.f00d7308"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"ejector","type":"address","indexed":false},{"internalType":"bool","name":"status","type":"bool","indexed":false}],"type":"event","name":"EjectorUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32","indexed":false},{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":false}],"type":"event","name":"OperatorEjected","anonymous":false},{"inputs":[{"internalType":"uint32","name":"ejectedOperators","type":"uint32","indexed":false},{"internalType":"bool","name":"ratelimitHit","type":"bool","indexed":false}],"type":"event","name":"QuorumEjection","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":false},{"internalType":"uint32","name":"rateLimitWindow","type":"uint32","indexed":false},{"internalType":"uint16","name":"ejectableStakePercent","type":"uint16","indexed":false}],"type":"event","name":"QuorumEjectionParamsSet","anonymous":false},{"inputs":[{"internalType":"uint8","name":"_quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"amountEjectableForQuorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32[][]","name":"_operatorIds","type":"bytes32[][]"}],"stateMutability":"nonpayable","type":"function","name":"ejectOperators"},{"inputs":[{"internalType":"address","name":"_ejector","type":"address"},{"internalType":"bool","name":"_status","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setEjector"},{"inputs":[{"internalType":"uint8","name":"_quorumNumber","type":"uint8"},{"internalType":"struct IEjectionManager.QuorumEjectionParams","name":"_quorumEjectionParams","type":"tuple","components":[{"internalType":"uint32","name":"rateLimitWindow","type":"uint32"},{"internalType":"uint16","name":"ejectableStakePercent","type":"uint16"}]}],"stateMutability":"nonpayable","type":"function","name":"setQuorumEjectionParams"}],"devdoc":{"kind":"dev","methods":{"amountEjectableForQuorum(uint8)":{"params":{"_quorumNumber":"The quorum number to view ejectable stake for"}},"ejectOperators(bytes32[][])":{"params":{"_operatorIds":"The ids of the operators to eject for each quorum"}},"setEjector(address,bool)":{"params":{"_ejector":"The address to permission"}},"setQuorumEjectionParams(uint8,(uint32,uint16))":{"params":{"_quorumEjectionParams":"The quorum ratelimit parameters to set for the given quorum","_quorumNumber":"The quorum number to set the ratelimit parameters for"}}},"version":1},"userdoc":{"kind":"user","methods":{"amountEjectableForQuorum(uint8)":{"notice":"Returns the amount of stake that can be ejected for a quorum at the current block.timestamp"},"ejectOperators(bytes32[][])":{"notice":"Ejects operators from the AVSs registryCoordinator under a ratelimit"},"setEjector(address,bool)":{"notice":"Sets the address permissioned to eject operators under a ratelimit"},"setQuorumEjectionParams(uint8,(uint32,uint16))":{"notice":"Sets the ratelimit parameters for a quorum"}},"version":1}},"settings":{"remappings":["@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/","@openzeppelin-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","@openzeppelin/=lib/openzeppelin-contracts/","ds-test/=lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","erc4626-tests/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IEjectionManager.sol":"IEjectionManager"},"evmVersion":"london","libraries":{}},"sources":{"src/interfaces/IEjectionManager.sol":{"keccak256":"0xdcc43919e2ab733aa1ae0c190678ce0945969b43592dd26a6deb18c0c0b9dc14","urls":["bzz-raw://41f2c8654ca7ea545a6932464627ae07e043df903be96d3f0504e00e16c09c2f","dweb:/ipfs/QmdcAWZZxPVhRQeuMmByHae8qeovoiUHMk6Uywff91Ektc"],"license":"MIT"}},"version":1},"id":117}